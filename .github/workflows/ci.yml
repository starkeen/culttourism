name: Deploy

on:
  push:
    branches:
      - main
      - analyzers
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install composer and dependencies
        uses: php-actions/composer@v6
        with:
          php_version: 8.1
          args: "--ignore-platform-reqs --optimize-autoloader"
          dev: yes
          progress: yes

      - name: PHPUnit Tests
        uses: php-actions/phpunit@v3
        env:
          XDEBUG_MODE: coverage
        with:
          bootstrap: vendor/autoload.php
          configuration: tests/phpunit.xml
          php_extensions: xdebug
          php_version: 8.1
          version: 10.5
          args: tests --coverage-clover ./phpunit-coverage.xml --log-junit=phpunit-report.xml

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: phpunit-reports
          path: |
            ./phpunit-coverage.xml
            ./phpunit-report.xml


  deploy:
    name: Deploy
    needs:
      - test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install deploy script
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USERNAME }}
          port: ${{ secrets.DEPLOY_PORT }}
          key: ${{ secrets.DEPLOY_SSHKEY }}
          source: Makefile
          target: ${{ secrets.DEPLOY_PATH }}

      - name: Run deploy script
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USERNAME }}
          port: ${{ secrets.DEPLOY_PORT }}
          key: ${{ secrets.DEPLOY_SSHKEY }}
          script: cd ${{ secrets.DEPLOY_PATH }} && make deploy

  sentry:
    name: Sentry
    needs:
      - deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Sentry Release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        with:
          environment: production
          ignore_missing: true

  phpcs:
    name: PHP Code Sniffer
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Composer install
        uses: php-actions/composer@v6
        with:
          php_version: 8.1
          args: "--ignore-platform-reqs --optimize-autoloader"
          dev: yes

      - name: PHP Code Sniffer
        uses: php-actions/phpcs@v1
        with:
          php_version: 8.1
          path: src/
          standard: PSR12
          report: full
        continue-on-error: true

  phpstan:
    name: PHPStan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: php-actions/composer@v6
        with:
          php_version: 8.1
          args: "--ignore-platform-reqs --optimize-autoloader"
          dev: yes
      - uses: php-actions/phpstan@v3
        with:
          path: src/
          memory_limit: 256M
        continue-on-error: true

  phpmd:
    name: PHP Mess Detector
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP environment
        uses: shivammathur/setup-php@v2
        with:
          coverage: none
          php-version: 8.1
          tools: phpmd

      - name: Composer install
        uses: php-actions/composer@v6
        with:
          php_version: 8.1
          args: "--ignore-platform-reqs --optimize-autoloader"
          dev: yes
          progress: yes

      - name: PHP Mess Detector
        run: phpmd . github phpmd.xml --exclude 'tests/*,vendor/*'
        continue-on-error: true

  codecov:
    name: CodeCov
#    if: github.event_name == 'workflow_run' && github.event.workflow_run.event == 'manual'
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: phpunit-reports

      - name: Upload to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          files: ./phpunit-coverage.xml
          verbose: true

  sonarcloud:
    name: SonarCloud
#    if: github.event_name == 'workflow_run' && github.event.workflow_run.event == 'manual'
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: phpunit-reports

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
